1. CNN(encoder) + CNN(decoder) 형태로 했을 경우에, 가운데 sep 부분의 vector 가 같은 도형 + 다른 위치, 다른 크기의 도형이라도 비슷한 피쳐값을 뽑아내는지 확인.
2. CNN 으로만 된 코드에서 softmax 직전의 형태 (flatten) 의 벡터 값들이 비슷한 도형 + 다른 위치, 크기의 도형이 비슷한 형태의 벡터를 가지는지 확인.
3. CNN pre training 하고 (model.fit) 결과 나온 모델을 이용하여 decoder 를 붙여서 다시 전체 트레이닝. 최종 결과 sep 되는 부분의 weight 가 비슷한 형태를 띄고 있는지 확인.

2. 모델에서 evaluation 방법이 어떤 것들이 있는지
- ** word2vec 에서 실험을 어떻게 진행했는지 확인하기.
- 주로 이 분야에서 eval 방법이 어떤 것인지 논문 찾아보고 평가하기
- ground truth 방법도 있음. 사람이 얘는 정말 비슷하다라고 판단한 목록과 predict 결과로 나온 애들이 얼마나 겹치는지 확인하는 방법.

3. CNN 최종적으로 전체 트레이닝 할 수 있도록 한 번 다시 코드 구현
우선 flat 과정 제외하고 encoder 구현하고 training 한 다음, 다시 decoder 붙여서 최종적으로 전체 encoder+decoder 부분 구현하기.


2-1. F1 score / recall (비율 조절하면서) /  accuracy 방법 사용
3-1. 노이즈 없는 데이터 셋 만들어서 다시 전체 트레이닝 시켜서 확인해보기. 정확도 확인 필수.

strategy1. 기존 방법 그대로 진행. 2nd 방법. 근데 왜 64인지 한 번 확인
strategy2. 아영이가 발표한 논문 다시 확인해서 GAP 방법 구현해보기, 채널 수 = vector의 크기 로 dense layer 대신 대체해서 코드짜기.